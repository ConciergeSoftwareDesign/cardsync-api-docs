{
  "openapi": "3.0.0",
  "info": {
    "title": "CardSync Universal Account Updater v1.1",
    "description": "This is the API for the CardSync Universal Account Updater service.\n\nAfter signing up as a CardSync Partner, you will be able to use this API in sandbox and production. You will be provided with an API key and a Partner Billing Identifier.\n\nThis API allows Partners to create and enroll Merchants and submit inquiry batches of credit card numbers and expiration dates to obtain card status (including updates to card numbers and/or expiration dates) or status updates.\n\nHere are the set of steps needed to create and enroll a merchant:\n\n1. Create merchant with /merchant POST. Depending on the agreement between the Partner and the Merchant, Terms of Service may need to be displayed. If this is the case, set \"accept_tos\" to \"false\". If the Terms have already been agreed to by the merchant, set \"accept_tos\" to \"true\".\n2. Retrieve and save provided \"id\" and \"api_key\".\n3. (Optional) If the merchant needs to agree to additional Terms of Service, display the Terms of Service so the merchant can sign the legal documentation. This step is optional as your existing agreement with the Merchant may already include these terms. If the Terms are required, call /accept-tos once the Merchant has signed. using the \"id\" as \"account_type_id\" and the \"api_key\" saved in step 2. This API call is not needed if \"accept_tos\" was set to \"true\" in step 1.\n4. (Optional) If a merchant abandons the process, it can be resumed upon next login by presenting the \"agreement_url\" again.\n5.  Create merchant enrollment with /enrollment POST, using \"api_key\" from step 2.\n6. The merchant will be set up for the Account Updater Service within 5-7 business days. The status can be retrieved via GET /enrollment.\n7. Once enrolled, batches can be submitted via the /batch POST. Save the provided \"batch_id\".\n8. Check batch status with GET /batch/{batch_id}.\n9. When the batch status is complete, retrieve the results with GET /batch/{batch_id}/results. Batches take approximately 5 business days to complete.\n\nEach batch may consist of up to 10,000 card numbers. There is no limit on the number of consecutive batch submissions. Inquiries may return one of six responses: updated_card, updated_expiry, no_match, valid, contact, or contact_closed. If the response is updated_card or updated_expiry, the updated card information is returned. Otherwise, one of the other four status types is returned. Some card inquiries do not result in any status type. This generally means the card is valid.\n\nFor more information, visit https://cardsync.io.\n\nContact Support:  \n    Email: help@cardsync.io",
    "contact": {},
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://sandbox.cardsync.io/api",
      "variables": {}
    }
  ],
  "paths": {
    "/merchant": {
      "post": {
        "tags": [
          "Merchant"
        ],
        "summary": "Add a new merchant",
        "description": "This endpoint is used to create a new Merchant on our platform. The details provided will be used later to auto fill the enrollment agreement. Merchants must have a unique name. The fee_schedule_id will be provided to you during your Partner creation and will be the same for all Merchants you create.",
        "operationId": "Addanewmerchant",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddanewmerchantRequest"
              },
              "example": {
                "name": "New Merchant-{{$guid}} <name must be unique>",
                "description": "this is a new merchant that is getting set up",
                "website": "example.com",
                "phone": "5555555555",
                "phone_ext": "1234",
                "receipt_email": "test@example.com",
                "timezone": "UTC",
                "fee_schedule_id": "bqoa026g10l0v8o62315",
                "primary_contact": {
                  "first_name": "Camille",
                  "last_name": "Bauch",
                  "company": "Schaefer, Lakin and Heathcote",
                  "address_line_1": "188 Turnpikefort",
                  "address_line_2": "",
                  "city": "Langoshfort",
                  "state": "VI",
                  "postal_code": "31018",
                  "country": "US",
                  "phone": "5555555555",
                  "email": "test@example.com"
                },
                "user": {
                  "username": "somerandomuser20210219c",
                  "email": "test@example.com",
                  "status": "active",
                  "role": "admin",
                  "create_api_key": true
                },
                "accept_tos": true
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Vary": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Accept-Encoding"
                  }
                }
              },
              "Content-Encoding": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "gzip"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 05 Jun 2020 23:14:18 GMT"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "568"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Addanewmerchant-200OK"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 05 Jun 2020 16:01:27 GMT"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "41"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-store"
                  }
                }
              },
              "Strict-Transport-Security": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "max-age=0; preload"
                  }
                }
              },
              "X-Content-Type-Options": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "nosniff"
                  }
                }
              },
              "X-XSS-Protection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "\"1; mode=block\""
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Addanewmerchant-401Unauthorized1"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/accept-tos": {
      "post": {
        "tags": [
          "Merchant"
        ],
        "summary": "Accept Terms of Service",
        "description": "During merchant creation, an enrollment_url is provided which provides the CardSync partner terms. If the Terms of Service are not marked as accepted during the merchant creation API call, the partner may call this API to mark that the merchant has accepted the Terms of Service.",
        "operationId": "AcceptTermsofService",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AcceptTermsofServiceRequest"
              },
              "example": {
                "name": "Signor Name1",
                "title": "Title1",
                "account_type": "merchant",
                "account_type_id": "c0lbt59erttvtfnb7k0g <id from /merchant>",
                "type": "cardsync",
                "version": 2
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 19 Feb 2021 21:08:21 GMT"
                  }
                }
              },
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "37"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              },
              "Set-Cookie": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "__cfduid=d0a65f30caf28c3cc9f76b58077bd2bfd1613768901; expires=Sun, 21-Mar-21 21:08:21 GMT; path=/; domain=.sandbox.cardsync.io; HttpOnly; SameSite=Lax; Secure"
                  }
                }
              },
              "Cache-Control": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "no-store"
                  }
                }
              },
              "Strict-Transport-Security": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "max-age=0; preload"
                  }
                }
              },
              "CF-Cache-Status": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "DYNAMIC"
                  }
                }
              },
              "cf-request-id": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "085db85aac0000e7f5ff20a000000001"
                  }
                }
              },
              "Expect-CT": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
                  }
                }
              },
              "X-Content-Type-Options": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "nosniff"
                  }
                }
              },
              "Server": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "cloudflare"
                  }
                }
              },
              "CF-RAY": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "6242f6711b68e7f5-LAX"
                  }
                }
              },
              "alt-svc": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "h3-27=\":443\"; ma=86400, h3-28=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
                  }
                }
              }
            },
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/AcceptTermsofService-200OK"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/cardsync/enrollment": {
      "post": {
        "tags": [
          "Enrollment"
        ],
        "summary": "Request Enrollment",
        "description": "Request Enrollment for a merchant. \n\nIn order for Partners to enroll their Merchant(s), CardSync must receive the Merchant legal entity name, Merchant Category Code (MCC), and an estimated number of of Visa, MasterCard, Discover, and American Express cards in the Merchant database.\n\nThe response to the Request Enrollment contains an \"agreement_url\" which can be displayed in an iframe to the user for immediate in-line signature.\n\nOnce the Card Brands have confirmed a Merchant has been approved and enrolled for Universal Account Updater (up to 5 business days), we will generate a confirmation response. Upon receiving enrollment confirmation via retrieve enrollment status, a partner my begin submitting card inquiries.",
        "operationId": "RequestEnrollment",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestEnrollmentRequest"
              },
              "example": {
                "legal_business_name": "Offical Corporate Legal Name",
                "type_of_biller": "both",
                "total_number_of_records": 400,
                "number_of_visa": 100,
                "number_of_mastercard": 100,
                "number_of_discover": 100,
                "number_of_amex": 100,
                "delivery_frequency": "monthly",
                "mcc": "5968"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "762"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Fri, 05 Jun 2020 23:53:55 GMT"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestEnrollment-200OKActive"
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "tags": [
          "Enrollment"
        ],
        "summary": "Retrieve Enrollment status",
        "description": "Returns the current status of the Merchant's requested enrollment. This will let you know when CardSync has received a completed e-sign document as well as when a Merchant has been activated so you may start submitting card inquiries on their behalf.",
        "operationId": "RetrieveEnrollmentstatus",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "759"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Sat, 06 Jun 2020 00:38:08 GMT"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveEnrollmentstatus-200OK"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/cardsync/batch": {
      "post": {
        "tags": [
          "Batch"
        ],
        "summary": "Creates batch of cards for updates",
        "description": "This endpoint requests updates for batches of card information. \n\n## Test Data\n\nYou can supply any Luhn10 valid card number, but to trigger specific responses, please use the following test card numbers in the sandbox environment.\n\n### Visa Test Cards\n4012000000000016 - updated_card  \n4012000000000024 - updated_expiry  \n4012000000000032 - no_match  \n4012000000000040 - valid  \n4012000000000057 - contact  \n4012000000000065 - contact_closed  \n\n### MC Test Cards\n5442980000000016 - updated_card  \n5442980000000024 - updated_expiry  \n5442980000000032 - no_match   \n5442980000000040 - valid  \n5442980000000057 - contact  \n5442980000000065 - contact_closed  \n\n### Discover Test Cards\n6011000000000012 - updated_card  \n6011000000000020 - updated_expiry   \n6011000000000038 - no_match  \n6011000000000046 - valid  \n6011000000000053 - contact  \n6011000000000061 - contact_closed",
        "operationId": "Createsbatchofcardsforupdates",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatesbatchofcardsforupdatesRequest"
              },
              "example": {
                "cards": [
                  {
                    "id": "customer identifier",
                    "card": "4012000000000016",
                    "exp": "12/24"
                  },
                  {
                    "id": "customer identifier",
                    "card": "4012000000000024",
                    "exp": "12/24"
                  },
                  {
                    "id": "customer identifier",
                    "card": "4012000000000032",
                    "exp": "12/24"
                  },
                  {
                    "id": "customer identifier",
                    "card": "4012000000000040",
                    "exp": "12/24"
                  },
                  {
                    "id": "customer identifier",
                    "card": "4012000000000057",
                    "exp": "12/24"
                  },
                  {
                    "id": "customer identifier",
                    "card": "4012000000000065",
                    "exp": "12/24"
                  },
                  {
                    "id": "customer identifier",
                    "card": "5442980000000016",
                    "exp": "12/24"
                  },
                  {
                    "id": "customer identifier",
                    "card": "5442980000000024",
                    "exp": "12/24"
                  },
                  {
                    "id": "customer identifier",
                    "card": "5442980000000032",
                    "exp": "12/24"
                  },
                  {
                    "id": "customer identifier",
                    "card": "5442980000000040",
                    "exp": "12/24"
                  },
                  {
                    "id": "customer identifier",
                    "card": "5442980000000057",
                    "exp": "12/24"
                  },
                  {
                    "id": "customer identifier",
                    "card": "5442980000000065",
                    "exp": "12/24"
                  },
                  {
                    "id": "customer identifier",
                    "card": "6011000000000012",
                    "exp": "12/24"
                  },
                  {
                    "id": "customer identifier",
                    "card": "6011000000000020",
                    "exp": "12/24"
                  },
                  {
                    "id": "customer identifier",
                    "card": "6011000000000038",
                    "exp": "12/24"
                  },
                  {
                    "id": "customer identifier",
                    "card": "6011000000000046",
                    "exp": "12/24"
                  },
                  {
                    "id": "customer identifier",
                    "card": "6011000000000053",
                    "exp": "12/24"
                  },
                  {
                    "id": "customer identifier",
                    "card": "6011000000000061",
                    "exp": "12/24"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "514"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Sat, 06 Jun 2020 01:39:15 GMT"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Createsabatchofcardsforupdates-200OK"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/cardsync/batch/{BATCH_ID}": {
      "get": {
        "tags": [
          "Batch"
        ],
        "summary": "Retrieves the status of a batch",
        "description": "Retrieve the status of a batch. Batches in the sandbox will be completed within one hour. Batches in production will take 3-5 calendar days to complete.",
        "operationId": "Retrievesthestatusofabatch",
        "parameters": [
          {
            "name": "BATCH_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "516"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Sat, 06 Jun 2020 01:40:28 GMT"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Retrievesthestatusofabatch-200OK"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "516"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Sat, 06 Jun 2020 01:41:21 GMT"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {}
          }
        },
        "deprecated": false
      }
    },
    "/cardsync/batch/{BATCH_ID}/results": {
      "get": {
        "tags": [
          "Batch"
        ],
        "summary": "Retrieve batch results",
        "description": "Retrieves a completed batch. Included with the batch results is the statistical breakdown of each update and/or response that was received. Results will include status updates as well as updated card information. The total number of results may be less than the number of cards submitted. Batch results will remain available for 10 calendar days after the batch completes, after which they are purged from the platform.",
        "operationId": "Retrievebatchresults",
        "parameters": [
          {
            "name": "BATCH_ID",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Length": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "729"
                  }
                }
              },
              "Date": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "Sat, 06 Jun 2020 01:43:49 GMT"
                  }
                }
              },
              "Connection": {
                "content": {
                  "text/plain": {
                    "schema": {
                      "type": "string"
                    },
                    "example": "keep-alive"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Retrievebatchresults-200OK"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "components": {
    "schemas": {
      "AddanewmerchantRequest": {
        "title": "AddanewmerchantRequest",
        "required": [
          "name",
          "description",
          "website",
          "phone",
          "phone_ext",
          "receipt_email",
          "timezone",
          "fee_schedule_id",
          "primary_contact",
          "user",
          "accept_tos"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "phone_ext": {
            "type": "string"
          },
          "receipt_email": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "fee_schedule_id": {
            "type": "string"
          },
          "primary_contact": {
            "$ref": "#/components/schemas/PrimaryContact"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "accept_tos": {
            "type": "boolean"
          }
        },
        "example": {
          "name": "New Merchant-{{$guid}} <name must be unique>",
          "description": "this is a new merchant that is getting set up",
          "website": "example.com",
          "phone": "5555555555",
          "phone_ext": "1234",
          "receipt_email": "test@example.com",
          "timezone": "UTC",
          "fee_schedule_id": "bqoa026g10l0v8o62315",
          "primary_contact": {
            "first_name": "Camille",
            "last_name": "Bauch",
            "company": "Schaefer, Lakin and Heathcote",
            "address_line_1": "188 Turnpikefort",
            "address_line_2": "",
            "city": "Langoshfort",
            "state": "VI",
            "postal_code": "31018",
            "country": "US",
            "phone": "5555555555",
            "email": "test@example.com"
          },
          "user": {
            "username": "somerandomuser20210219c",
            "email": "test@example.com",
            "status": "active",
            "role": "admin",
            "create_api_key": true
          },
          "accept_tos": true
        }
      },
      "PrimaryContact": {
        "title": "PrimaryContact",
        "required": [
          "first_name",
          "last_name",
          "company",
          "address_line_1",
          "address_line_2",
          "city",
          "state",
          "postal_code",
          "country",
          "phone",
          "email"
        ],
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "address_line_1": {
            "type": "string"
          },
          "address_line_2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "postal_code": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "example": {
          "first_name": "Camille",
          "last_name": "Bauch",
          "company": "Schaefer, Lakin and Heathcote",
          "address_line_1": "188 Turnpikefort",
          "address_line_2": "",
          "city": "Langoshfort",
          "state": "VI",
          "postal_code": "31018",
          "country": "US",
          "phone": "5555555555",
          "email": "test@example.com"
        }
      },
      "User": {
        "title": "User",
        "required": [
          "username",
          "email",
          "status",
          "role",
          "create_api_key"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "create_api_key": {
            "type": "boolean"
          }
        },
        "example": {
          "username": "somerandomuser20210219c",
          "email": "test@example.com",
          "status": "active",
          "role": "admin",
          "create_api_key": true
        }
      },
      "Addanewmerchant-200OK": {
        "title": "Addanewmerchant-200OK",
        "required": [
          "status",
          "msg",
          "data"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "msg": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/Data"
          }
        },
        "example": {
          "status": "success",
          "msg": "success",
          "data": {
            "id": "bqgbm86g10l2fm2bv7n0",
            "partner_id": "bqgblveg10l2b5dhg0ig",
            "name": "New Merchant",
            "description": "this is a new merchant that is getting setup",
            "website": "example.com",
            "phone": "5555555555",
            "phone_ext": "",
            "receipt_email": "test@example.com",
            "timezone": "UTC",
            "status": "active",
            "fee_schedule_id": "bqgblveg10l2b5dhg0l0",
            "logo_url": "",
            "primary_contact": {
              "first_name": "Camille",
              "last_name": "Bauch",
              "company": "Schaefer, Lakin and Heathcote",
              "address_line_1": "188 Turnpikefort",
              "address_line_2": "",
              "city": "Langoshfort",
              "state": "VI",
              "postal_code": "31018",
              "country": "US",
              "phone": "7177546366",
              "phone_ext": "",
              "fax": "",
              "email": "test@example.com"
            },
            "billing_contact": {
              "first_name": "Camille",
              "last_name": "Bauch",
              "company": "Schaefer, Lakin and Heathcote",
              "address_line_1": "188 Turnpikefort",
              "address_line_2": "",
              "city": "Langoshfort",
              "state": "VI",
              "postal_code": "31018",
              "country": "US",
              "phone": "7177546366",
              "phone_ext": "",
              "fax": "",
              "email": "test@example.com"
            },
            "billing": null,
            "api_key": "api_1auidmDFdMslUz2R5PSwVFSEfmP",
            "tos_accepted_by": "Test Partner / Test Partner",
            "tos_accepted_by_username": "test_partner",
            "created_at": "2020-04-22T21:46:08.448148Z",
            "tos_last_accepted_at": "2020-04-22T21:46:08Z"
          }
        }
      },
      "Data": {
        "title": "Data",
        "required": [
          "id",
          "partner_id",
          "name",
          "description",
          "website",
          "phone",
          "phone_ext",
          "receipt_email",
          "timezone",
          "status",
          "fee_schedule_id",
          "logo_url",
          "primary_contact",
          "billing_contact",
          "billing",
          "api_key",
          "tos_accepted_by",
          "tos_accepted_by_username",
          "created_at",
          "tos_last_accepted_at"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "partner_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "phone_ext": {
            "type": "string"
          },
          "receipt_email": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "fee_schedule_id": {
            "type": "string"
          },
          "logo_url": {
            "type": "string"
          },
          "primary_contact": {
            "$ref": "#/components/schemas/PrimaryContact1"
          },
          "billing_contact": {
            "$ref": "#/components/schemas/BillingContact"
          },
          "billing": {
            "type": "string",
            "nullable": true
          },
          "api_key": {
            "type": "string"
          },
          "tos_accepted_by": {
            "type": "string"
          },
          "tos_accepted_by_username": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "tos_last_accepted_at": {
            "type": "string"
          }
        },
        "example": {
          "id": "bqgbm86g10l2fm2bv7n0",
          "partner_id": "bqgblveg10l2b5dhg0ig",
          "name": "New Merchant",
          "description": "this is a new merchant that is getting setup",
          "website": "example.com",
          "phone": "5555555555",
          "phone_ext": "",
          "receipt_email": "test@example.com",
          "timezone": "UTC",
          "status": "active",
          "fee_schedule_id": "bqgblveg10l2b5dhg0l0",
          "logo_url": "",
          "primary_contact": {
            "first_name": "Camille",
            "last_name": "Bauch",
            "company": "Schaefer, Lakin and Heathcote",
            "address_line_1": "188 Turnpikefort",
            "address_line_2": "",
            "city": "Langoshfort",
            "state": "VI",
            "postal_code": "31018",
            "country": "US",
            "phone": "7177546366",
            "phone_ext": "",
            "fax": "",
            "email": "test@example.com"
          },
          "billing_contact": {
            "first_name": "Camille",
            "last_name": "Bauch",
            "company": "Schaefer, Lakin and Heathcote",
            "address_line_1": "188 Turnpikefort",
            "address_line_2": "",
            "city": "Langoshfort",
            "state": "VI",
            "postal_code": "31018",
            "country": "US",
            "phone": "7177546366",
            "phone_ext": "",
            "fax": "",
            "email": "test@example.com"
          },
          "billing": null,
          "api_key": "api_1auidmDFdMslUz2R5PSwVFSEfmP",
          "tos_accepted_by": "Test Partner / Test Partner",
          "tos_accepted_by_username": "test_partner",
          "created_at": "2020-04-22T21:46:08.448148Z",
          "tos_last_accepted_at": "2020-04-22T21:46:08Z"
        }
      },
      "PrimaryContact1": {
        "title": "PrimaryContact1",
        "required": [
          "first_name",
          "last_name",
          "company",
          "address_line_1",
          "address_line_2",
          "city",
          "state",
          "postal_code",
          "country",
          "phone",
          "phone_ext",
          "fax",
          "email"
        ],
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "address_line_1": {
            "type": "string"
          },
          "address_line_2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "postal_code": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "phone_ext": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "example": {
          "first_name": "Camille",
          "last_name": "Bauch",
          "company": "Schaefer, Lakin and Heathcote",
          "address_line_1": "188 Turnpikefort",
          "address_line_2": "",
          "city": "Langoshfort",
          "state": "VI",
          "postal_code": "31018",
          "country": "US",
          "phone": "7177546366",
          "phone_ext": "",
          "fax": "",
          "email": "test@example.com"
        }
      },
      "BillingContact": {
        "title": "BillingContact",
        "required": [
          "first_name",
          "last_name",
          "company",
          "address_line_1",
          "address_line_2",
          "city",
          "state",
          "postal_code",
          "country",
          "phone",
          "phone_ext",
          "fax",
          "email"
        ],
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "address_line_1": {
            "type": "string"
          },
          "address_line_2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "postal_code": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "phone_ext": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "example": {
          "first_name": "Camille",
          "last_name": "Bauch",
          "company": "Schaefer, Lakin and Heathcote",
          "address_line_1": "188 Turnpikefort",
          "address_line_2": "",
          "city": "Langoshfort",
          "state": "VI",
          "postal_code": "31018",
          "country": "US",
          "phone": "7177546366",
          "phone_ext": "",
          "fax": "",
          "email": "test@example.com"
        }
      },
      "Addanewmerchant-401Unauthorized1": {
        "title": "Addanewmerchant-401Unauthorized1",
        "required": [
          "status",
          "msg"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "msg": {
            "type": "string"
          }
        },
        "example": {
          "status": "failed",
          "msg": "unauthorized"
        }
      },
      "AcceptTermsofServiceRequest": {
        "title": "AcceptTermsofServiceRequest",
        "required": [
          "name",
          "title",
          "account_type",
          "account_type_id",
          "type",
          "version"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "account_type": {
            "type": "string"
          },
          "account_type_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "name": "Signor Name1",
          "title": "Title1",
          "account_type": "merchant",
          "account_type_id": "c0lbt59erttvtfnb7k0g <id from /merchant>",
          "type": "cardsync",
          "version": 2
        }
      },
      "AcceptTermsofService-200OK": {
        "title": "AcceptTermsofService-200OK",
        "required": [
          "status",
          "msg"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "msg": {
            "type": "string"
          }
        },
        "example": {
          "status": "success",
          "msg": "success"
        }
      },
      "RequestEnrollmentRequest": {
        "title": "RequestEnrollmentRequest",
        "required": [
          "legal_business_name",
          "type_of_biller",
          "total_number_of_records",
          "number_of_visa",
          "number_of_mastercard",
          "number_of_discover",
          "number_of_amex",
          "delivery_frequency",
          "mcc"
        ],
        "type": "object",
        "properties": {
          "legal_business_name": {
            "type": "string"
          },
          "type_of_biller": {
            "type": "string"
          },
          "total_number_of_records": {
            "type": "integer",
            "format": "int32"
          },
          "number_of_visa": {
            "type": "integer",
            "format": "int32"
          },
          "number_of_mastercard": {
            "type": "integer",
            "format": "int32"
          },
          "number_of_discover": {
            "type": "integer",
            "format": "int32"
          },
          "number_of_amex": {
            "type": "integer",
            "format": "int32"
          },
          "delivery_frequency": {
            "type": "string"
          },
          "mcc": {
            "type": "string"
          }
        },
        "example": {
          "legal_business_name": "Offical Corporate Legal Name",
          "type_of_biller": "both",
          "total_number_of_records": 400,
          "number_of_visa": 100,
          "number_of_mastercard": 100,
          "number_of_discover": 100,
          "number_of_amex": 100,
          "delivery_frequency": "monthly",
          "mcc": "5968"
        }
      },
      "RequestEnrollment-200OKActive": {
        "title": "RequestEnrollment-200OKActive",
        "required": [
          "status",
          "msg",
          "data"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "msg": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/Data1"
          }
        },
        "example": {
          "status": "success",
          "msg": "success",
          "data": {
            "id": "bqgbm86g10l2fm2bv7n1",
            "type": "cardsync",
            "details": {
              "legal_business_name": "Full Legal Name of Merchant",
              "type_of_biller": "both",
              "total_number_of_records": 400,
              "number_of_visa": 100,
              "number_of_mastercard": 100,
              "number_of_discover": 100,
              "number_of_amex": 100,
              "delivery_frequency": "monthly",
              "mcc": "5968"
            },
            "status": "active",
            "created_at": "2020-04-22T21:46:08.448148Z",
            "updated_at": "2020-04-22T21:46:08.448148Z",
            "activated_at": null,
            "deactivated_at": null
          }
        }
      },
      "Data1": {
        "title": "Data1",
        "required": [
          "id",
          "type",
          "details",
          "status",
          "created_at",
          "updated_at",
          "activated_at",
          "deactivated_at"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "details": {
            "$ref": "#/components/schemas/Details"
          },
          "status": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "activated_at": {
            "type": "string",
            "nullable": true
          },
          "deactivated_at": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "id": "bqgbm86g10l2fm2bv7n1",
          "type": "cardsync",
          "details": {
            "legal_business_name": "Full Legal Name of Merchant",
            "type_of_biller": "both",
            "total_number_of_records": 400,
            "number_of_visa": 100,
            "number_of_mastercard": 100,
            "number_of_discover": 100,
            "number_of_amex": 100,
            "delivery_frequency": "monthly",
            "mcc": "5968"
          },
          "status": "active",
          "created_at": "2020-04-22T21:46:08.448148Z",
          "updated_at": "2020-04-22T21:46:08.448148Z",
          "activated_at": null,
          "deactivated_at": null
        }
      },
      "Details": {
        "title": "Details",
        "required": [
          "legal_business_name",
          "type_of_biller",
          "total_number_of_records",
          "number_of_visa",
          "number_of_mastercard",
          "number_of_discover",
          "number_of_amex",
          "delivery_frequency",
          "mcc"
        ],
        "type": "object",
        "properties": {
          "legal_business_name": {
            "type": "string"
          },
          "type_of_biller": {
            "type": "string"
          },
          "total_number_of_records": {
            "type": "integer",
            "format": "int32"
          },
          "number_of_visa": {
            "type": "integer",
            "format": "int32"
          },
          "number_of_mastercard": {
            "type": "integer",
            "format": "int32"
          },
          "number_of_discover": {
            "type": "integer",
            "format": "int32"
          },
          "number_of_amex": {
            "type": "integer",
            "format": "int32"
          },
          "delivery_frequency": {
            "type": "string"
          },
          "mcc": {
            "type": "string"
          }
        },
        "example": {
          "legal_business_name": "Full Legal Name of Merchant",
          "type_of_biller": "both",
          "total_number_of_records": 400,
          "number_of_visa": 100,
          "number_of_mastercard": 100,
          "number_of_discover": 100,
          "number_of_amex": 100,
          "delivery_frequency": "monthly",
          "mcc": "5968"
        }
      },
      "RequestEnrollment-200OKPending_Activation": {
        "title": "RequestEnrollment-200OKPending_Activation",
        "required": [
          "status",
          "msg",
          "data"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "msg": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/Data1"
          }
        },
        "example": {
          "status": "success",
          "msg": "success",
          "data": {
            "id": "bqgbm86g10l2fm2bv7n1",
            "type": "cardsync",
            "details": {
              "legal_business_name": "Full Legal Name of Merchant",
              "type_of_biller": "both",
              "total_number_of_records": 400,
              "number_of_visa": 100,
              "number_of_mastercard": 100,
              "number_of_discover": 100,
              "number_of_amex": 100,
              "delivery_frequency": "monthly",
              "mcc": "5968"
            },
            "status": "pending_activation",
            "created_at": "2020-04-22T21:46:08.448148Z",
            "updated_at": "2020-04-22T21:46:08.448148Z",
            "activated_at": null,
            "deactivated_at": null
          }
        }
      },
      "RetrieveEnrollmentstatus-200OK": {
        "title": "RetrieveEnrollmentstatus-200OK",
        "required": [
          "status",
          "msg",
          "data"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "msg": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/Data3"
          }
        },
        "example": {
          "status": "success",
          "msg": "success",
          "data": {
            "id": "bqgbm86g10l2fm2bv7n1",
            "type": "cardsync",
            "details": {
              "legal_business_name": "test merchant inc",
              "type_of_biller": "both",
              "total_number_of_records": 400,
              "number_of_visa": 100,
              "number_of_mastercard": 100,
              "number_of_discover": 100,
              "number_of_amex": 100,
              "delivery_frequency": "monthly",
              "mcc": "5968"
            },
            "status": "active",
            "created_at": "2020-04-22T21:46:08.448148Z",
            "updated_at": "2020-04-22T21:46:08.448148Z",
            "activated_at": "2020-04-22T21:46:08.448148Z",
            "deactivated_at": null
          }
        }
      },
      "Data3": {
        "title": "Data3",
        "required": [
          "id",
          "type",
          "details",
          "status",
          "created_at",
          "updated_at",
          "activated_at",
          "deactivated_at"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "details": {
            "$ref": "#/components/schemas/Details"
          },
          "status": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "activated_at": {
            "type": "string"
          },
          "deactivated_at": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "id": "bqgbm86g10l2fm2bv7n1",
          "type": "cardsync",
          "details": {
            "legal_business_name": "test merchant inc",
            "type_of_biller": "both",
            "total_number_of_records": 400,
            "number_of_visa": 100,
            "number_of_mastercard": 100,
            "number_of_discover": 100,
            "number_of_amex": 100,
            "delivery_frequency": "monthly",
            "mcc": "5968"
          },
          "status": "active",
          "created_at": "2020-04-22T21:46:08.448148Z",
          "updated_at": "2020-04-22T21:46:08.448148Z",
          "activated_at": "2020-04-22T21:46:08.448148Z",
          "deactivated_at": null
        }
      },
      "CreatesbatchofcardsforupdatesRequest": {
        "title": "CreatesbatchofcardsforupdatesRequest",
        "required": [
          "cards"
        ],
        "type": "object",
        "properties": {
          "cards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Card"
            },
            "description": ""
          }
        },
        "example": {
          "cards": [
            {
              "id": "customer identifier",
              "card": "4012000000000016",
              "exp": "12/24"
            },
            {
              "id": "customer identifier",
              "card": "4012000000000024",
              "exp": "12/24"
            },
            {
              "id": "customer identifier",
              "card": "4012000000000032",
              "exp": "12/24"
            },
            {
              "id": "customer identifier",
              "card": "4012000000000040",
              "exp": "12/24"
            },
            {
              "id": "customer identifier",
              "card": "4012000000000057",
              "exp": "12/24"
            },
            {
              "id": "customer identifier",
              "card": "4012000000000065",
              "exp": "12/24"
            },
            {
              "id": "customer identifier",
              "card": "5442980000000016",
              "exp": "12/24"
            },
            {
              "id": "customer identifier",
              "card": "5442980000000024",
              "exp": "12/24"
            },
            {
              "id": "customer identifier",
              "card": "5442980000000032",
              "exp": "12/24"
            },
            {
              "id": "customer identifier",
              "card": "5442980000000040",
              "exp": "12/24"
            },
            {
              "id": "customer identifier",
              "card": "5442980000000057",
              "exp": "12/24"
            },
            {
              "id": "customer identifier",
              "card": "5442980000000065",
              "exp": "12/24"
            },
            {
              "id": "customer identifier",
              "card": "6011000000000012",
              "exp": "12/24"
            },
            {
              "id": "customer identifier",
              "card": "6011000000000020",
              "exp": "12/24"
            },
            {
              "id": "customer identifier",
              "card": "6011000000000038",
              "exp": "12/24"
            },
            {
              "id": "customer identifier",
              "card": "6011000000000046",
              "exp": "12/24"
            },
            {
              "id": "customer identifier",
              "card": "6011000000000053",
              "exp": "12/24"
            },
            {
              "id": "customer identifier",
              "card": "6011000000000061",
              "exp": "12/24"
            }
          ]
        }
      },
      "Card": {
        "title": "Card",
        "required": [
          "id",
          "card",
          "exp"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "card": {
            "type": "string"
          },
          "exp": {
            "type": "string"
          }
        },
        "example": {
          "id": "customer identifier",
          "card": "4012000000000016",
          "exp": "12/24"
        }
      },
      "Createsabatchofcardsforupdates-200OK": {
        "title": "Createsabatchofcardsforupdates-200OK",
        "required": [
          "status",
          "msg",
          "data"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "msg": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/Data4"
          }
        },
        "example": {
          "status": "success",
          "msg": "success",
          "data": {
            "batch_id": "bqgbm86g10l2fm2bv7n0",
            "status": "pending",
            "stats": {
              "number_submitted": 0,
              "no_change": 0,
              "updated_card": 0,
              "updated_expiry": 0,
              "no_match": 0,
              "valid": 0,
              "contact": 0,
              "contact_closed": 0
            },
            "created_at": "2020-04-22T21:46:08.448148Z",
            "updated_at": "2020-04-22T21:46:08.448148Z"
          }
        }
      },
      "Data4": {
        "title": "Data4",
        "required": [
          "batch_id",
          "status",
          "stats",
          "created_at",
          "updated_at"
        ],
        "type": "object",
        "properties": {
          "batch_id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "stats": {
            "$ref": "#/components/schemas/Stats"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "example": {
          "batch_id": "bqgbm86g10l2fm2bv7n0",
          "status": "pending",
          "stats": {
            "number_submitted": 0,
            "no_change": 0,
            "updated_card": 0,
            "updated_expiry": 0,
            "no_match": 0,
            "valid": 0,
            "contact": 0,
            "contact_closed": 0
          },
          "created_at": "2020-04-22T21:46:08.448148Z",
          "updated_at": "2020-04-22T21:46:08.448148Z"
        }
      },
      "Stats": {
        "title": "Stats",
        "required": [
          "number_submitted",
          "no_change",
          "updated_card",
          "updated_expiry",
          "no_match",
          "valid",
          "contact",
          "contact_closed"
        ],
        "type": "object",
        "properties": {
          "number_submitted": {
            "type": "integer",
            "format": "int32"
          },
          "no_change": {
            "type": "integer",
            "format": "int32"
          },
          "updated_card": {
            "type": "integer",
            "format": "int32"
          },
          "updated_expiry": {
            "type": "integer",
            "format": "int32"
          },
          "no_match": {
            "type": "integer",
            "format": "int32"
          },
          "valid": {
            "type": "integer",
            "format": "int32"
          },
          "contact": {
            "type": "integer",
            "format": "int32"
          },
          "contact_closed": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "number_submitted": 0,
          "no_change": 0,
          "updated_card": 0,
          "updated_expiry": 0,
          "no_match": 0,
          "valid": 0,
          "contact": 0,
          "contact_closed": 0
        }
      },
      "Retrievesthestatusofabatch-200OK": {
        "title": "Retrievesthestatusofabatch-200OK",
        "required": [
          "status",
          "msg",
          "data"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "msg": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/Data4"
          }
        },
        "example": {
          "status": "success",
          "msg": "success",
          "data": {
            "batch_id": "bqgbm86g10l2fm2bv7n1",
            "status": "completed",
            "stats": {
              "number_submitted": 1,
              "no_change": 0,
              "updated_card": 1,
              "updated_expiry": 0,
              "no_match": 0,
              "valid": 0,
              "contact": 0,
              "contact_closed": 0
            },
            "created_at": "2020-04-22T21:46:08.448148Z",
            "updated_at": "2020-04-22T21:46:08.448148Z"
          }
        }
      },
      "Retrievesbatchstatus-200OK-InvalidID": {
        "title": "Retrievesbatchstatus-200OK-InvalidID",
        "required": [
          "status",
          "msg"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "msg": {
            "type": "string"
          }
        },
        "example": {
          "status": "failure",
          "msg": "failure"
        }
      },
      "Retrievebatchresults-200OK": {
        "title": "Retrievebatchresults-200OK",
        "required": [
          "status",
          "msg",
          "data"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "msg": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/Data6"
          }
        },
        "example": {
          "status": "success",
          "msg": "success",
          "data": {
            "batch_id": "bqgbm86g10l2fm2bv7n1",
            "status": "completed",
            "cards": [
              {
                "id": "aaaaaaaaaa",
                "card": "4111111111111111",
                "exp": "12/24",
                "status": "updated_card"
              }
            ],
            "stats": {
              "number_submitted": 1,
              "no_change": 0,
              "updated_card": 1,
              "updated_expiry": 0,
              "no_match": 0,
              "valid": 0,
              "contact": 0,
              "contact_closed": 0
            },
            "created_at": "2020-04-22T21:46:08.448148Z",
            "updated_at": "2020-04-22T21:46:08.448148Z"
          }
        }
      },
      "Data6": {
        "title": "Data6",
        "required": [
          "batch_id",
          "status",
          "cards",
          "stats",
          "created_at",
          "updated_at"
        ],
        "type": "object",
        "properties": {
          "batch_id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "cards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Card1"
            },
            "description": ""
          },
          "stats": {
            "$ref": "#/components/schemas/Stats"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "example": {
          "batch_id": "bqgbm86g10l2fm2bv7n1",
          "status": "completed",
          "cards": [
            {
              "id": "aaaaaaaaaa",
              "card": "4111111111111111",
              "exp": "12/24",
              "status": "updated_card"
            }
          ],
          "stats": {
            "number_submitted": 1,
            "no_change": 0,
            "updated_card": 1,
            "updated_expiry": 0,
            "no_match": 0,
            "valid": 0,
            "contact": 0,
            "contact_closed": 0
          },
          "created_at": "2020-04-22T21:46:08.448148Z",
          "updated_at": "2020-04-22T21:46:08.448148Z"
        }
      },
      "Card1": {
        "title": "Card1",
        "required": [
          "id",
          "card",
          "exp",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "card": {
            "type": "string"
          },
          "exp": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "example": {
          "id": "aaaaaaaaaa",
          "card": "4111111111111111",
          "exp": "12/24",
          "status": "updated_card"
        }
      }
    },
    "securitySchemes": {
      "Authorization": {
        "type": "apiKey",
        "description": "",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Authorization": []
    }
  ],
  "tags": [
    {
      "name": "Merchant",
      "description": "Merchants are top level entities that must be created for Universal Account Updater enrollment by the respective Card Brands. Use the master api_key provided to you during your account creation for this call.\n\nThis call will return a new, merchant-level api_key. This new api_key should be used for all future requests associated with the newly created merchant.\n\nDuring the merchant creation process, you can optionally display Terms of Service (TOS) for the merchant to accept. If the TOS has already been incorporated into your agreement with the merchant, you may skip this step.\n\nIf you want the TOS, please set the \"accept_tos\" flag to \"false\" when calling the /merchant POST. If you set it to true, the merchant creation will happen immediately. If you set accept_tos to false, you can then call /accept-tos after the merchant has accepted the TOS."
    },
    {
      "name": "Enrollment",
      "description": "Once a Merchant has been created, you can initiate the Card Brand Enrollment process using the endpoints below. \n\nEnrollment will request some additional details around stored card data and will be used to auto fill the Card Brand required CardSync Merchant Agreement. A Merchant should only be enrolled one time.\n\nIf you have the Interim Activation feature on your partner account, the merchant account will activate immediately. If this feature is not active, it will take 5-7 business days for the Card Brands to approve the request. You may retrieve the Enrollment Status to determine if the process is complete.\n\nOnce the account is active, card batches (see next section) may be submitted immediately."
    },
    {
      "name": "Batch",
      "description": "A batch is a set of up to 10,000 credit card numbers and expiration dates being submitted for updates by the respective Card Issuers. If you need to send inquiries on more than 10,000 cards at once, you may submit multiple batches simultaneously.\n\nBest practice for recurring billing (e.g. subscriptions) is to submit on a daily or weekly basis any cards being billed in the next one to two weeks. For Merchants with payment data on file, we recommend submitting those based on your average time between transactions.\n\nOnce submitted, the Card Issuers will start to return updates. In sandbox, all results (updates and/or status responses) are completed within one hour. In production, it will take 3-5 calendar days for a batch to complete. \n"
    }
  ]
}